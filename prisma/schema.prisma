generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id           String        @id @default(cuid())
  name         String
  slug         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  users        User[]
  featureFlags FeatureFlag[]
  people       Person[]
  shifts       ShiftInstance[]
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  role      UserRole  @default(MEMBER)
  tenantId  String
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum UserRole {
  GLOBAL_ADMIN
  TENANT_ADMIN
  CAPTAIN
  SCHEDULER
  MEMBER
}

model FeatureFlag {
  id        String   @id @default(cuid())
  key       String
  value     String   @default("on") // "on" | "off"
  tenantId  String?
  tenant    Tenant?  @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([key, tenantId])
}

model Person {
  id        String   @id @default(cuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  name      String
  email     String?
  phone     String?
  assignments Assignment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShiftInstance {
  id        String   @id @default(cuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  name      String?
  startsAt  DateTime
  endsAt    DateTime
  zoneId    String?
  assignments Assignment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([tenantId, startsAt, endsAt])
}

model Assignment {
  id        String   @id @default(cuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  shiftId   String
  shift     ShiftInstance @relation(fields: [shiftId], references: [id])
  personId  String
  person    Person   @relation(fields: [personId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([shiftId, personId])
}
